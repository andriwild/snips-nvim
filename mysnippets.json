{"snippets":[{"content":["<#snipsCreate#> :: CommandArguments -> SnipsNvim ()","<#snipsCreate#> CommandArguments {range = _range} =","  case _range of","    (Just (l1, l2)) -> do","      cb <- vim_get_current_buffer","      fileType <- getBufferFileType cb","      newBuffer <- createNewBuf \"Create new snippet\" Nothing","      setCurrentBuffersFileType fileType","      readAndPaste cb newBuffer l1 l2 0","      return ()","    Nothing -> return ()",""],"meta":{"fileTypes":["haskell"]},"name":"functiona"},{"content":["efnewjfkhewfkljhefwlfwef"],"meta":{"fileTypes":["js","ts","hs"]},"name":"peter"},{"content":["asdfasdfsdf","asdfasdf"],"meta":{"fileTypes":["py","py2","py3"]},"name":"helloÂ world"}]}